Task1:

l=[]
for i in range(5):
    s={}
    s['key1']=input()
    s['key2']=input()
    l.append(s)
print(l)

output:

1
2
3
4
5
6
7
8
9
1
[{'key1': '1', 'key2': '2'}, {'key1': '3', 'key2': '4'}, {'key1': '5', 'key2': '6'}, {'key1': '7', 'key2': '8'}, {'key1': '9', 'key2': '1'}]

Task2:

db=[{'abc@task.com':123},{'bcd@task.com':234},{'cde@task.com':789},{'xyz@task.com':678}]
username=input()
password=int(input())
flag=0
for i in db:
    for j in i:
        if(j==username):
            if(i[j]==password):
                print('valid')
                flag=1
                break
    if(flag==1):
        break
if(flag==0):
    print('invalid')

output:

cse@task.com
789
invalid

effiecient method for task2:

db=[{'abc@task.com':123},{'bcd@task.com':234},{'cde@task.com':789},{'xyz@task.com':678}]
username=input()
password=int(input())
for i in db:
    if (username,password) in i.items():
        print('Valid')
        break
else:
    print('invalid')

output:

xcv
123
invalid

more efficient method for task2:

db=[{'abc@task.com':123},{'bcd@task.com':234},{'cde@task.com':789},{'xyz@task.com':678}]
username=input()
password=int(input())
temp={username:password}
if temp in db:
    print('valid')
else:
    print('invalid')

Task 3:

db=[{'abc@task.com':123},{'bcd@task.com':234},{'cde@task.com':789},{'xyz@task.com':678}]
username=input()
password=int(input())
for i in db:
    if username in i:
        print("give another username")
        username=input()
        db.append({username:password})
        break
else:
    db.append({username:password})
    print('registration successful')
print(db)

output:

thanujasandhya021202@gmail.com
2152
registration successful
[{'abc@task.com': 123}, {'bcd@task.com': 234}, {'cde@task.com': 789}, {'xyz@task.com': 678}, {'thanujasandhya021202@gmail.com': 2152}]
    
Task 4:

row=3
col=3
mat1=[]
mat2=[]
res=[]
for i in range(row):
    mat1.append(list(map(int,input().split()))[:col])
print()
for i in range(row):
    mat2.append(list(map(int,input().split()))[:col])
res=[[0 for j in range(col)] for i in range(row)]
print()
for i in range(row):
    for j in range(col):
        res[i][j] = mat1[i][j]+mat2[i][j]
        print(res[i][j],end=' ')
    print()

output:

1 2 3 4
1 2 1
1 2 4 

1 2 3
1 2 6 7
1 2 6

2 4 6 
2 4 7 
2 4 10 
 
 
Task5:

row=3
col=3
mat=[]
for i in range(row):
    mat.append(list(map(int,input().split()))[:col])
for i in range(row):
    for j in range(col):
        print(mat[j][i],end=' ')
    print()
    
output:

1 2 3
4 5 6 7
4 7 8

1 4 4 
2 5 7 
3 6 8 

Task6:

l=[0,1]
i=2
while(len(l)<25):
    l.append(l[-1]+l[-2])
print(l)

output:

0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, 28657, 46368]

String Methods:

s="thanuJa sandhya"
print(s.capitalize())
res=s.split()
print(res)
print('-'.join(res))
print(s.title())
print(s.upper())
print(s.lower())
print(s.count('a'))
print(s.isalnum())
print(s.isalpha())

output:

Thanuja sandhya
['thanuJa', 'sandhya']
thanuJa-sandhya
Thanuja Sandhya
THANUJA SANDHYA
thanuja sandhya
4
False
False

string formats:

num=3.14
print('the square of {:10} is {:.2f}'.format(num,num*num))
print(f'the square of {num} is {num*num:.1f}')#fstrings

output:

the square of       3.14 is 9.86
the square of 3.14 is 9.9

calculator using exception handling:

num1=int(input())
num2=int(input())
op=input()
if(op=='+'):
    print(num1+num2)
elif(op=='-'):
    print(num1-num2)
elif(op=='*'):
    print(num1*num)
elif(op=='/'):
    try:
        print(num1/num2)
    except:
        print('num2 should not be zero')
else:
    print('invalid operator')
    
output:

5
7
#
invalid operator

Task7:

try:
    l=list(map(int,input().split()))[:5]
    print(*l)
except:
    print('try another time')
    
output:

1 2 3 4 57,000
try another time

eval:

print(eval("3+5//8-5"))

output:

-2

functions:

def is_prime(num):
    for i in range(2,int(num**0.5)+1):
        if(num%i==0):
            return 0
    else:
        return 1
num=int(input())
if(is_prime(num)==0):
    print('not a prime')
elif(is_prime(num)==1):
    print('prime')
 
output:

32
not a prime


